---
// Menu.astro - Independent implementation with client:visible hydration
import type { MenuProps } from '../../types/menu';
import { DEFAULT_HYDRATION } from '../../core/hydration';

// Destructure props with defaults
const { 
  as = 'div', 
  client = DEFAULT_HYDRATION,
  open = false,
  ...rest 
} = Astro.props as MenuProps;

// Generate unique ID for accessibility
const menuId = `headlessui-menu-${Math.random().toString(36).substring(2, 9)}`;
---

<div 
  id={menuId}
  data-headlessui-menu
  data-headlessui-state={open ? 'open' : ''}
  {...rest}
  client:visible
>
  <slot />
  
  <script>
    // Initialize component via client-side script
    // Create our own simplified version for the playground
    
    // Initialize all menu components when the DOM is ready
    document.addEventListener('astro:page-load', () => {
      document.querySelectorAll('[data-headlessui-menu]').forEach(element => {
        if (element instanceof HTMLElement) {
          initializeMenu(element);
        }
      });
    });

    function initializeMenu(element) {
      const button = element.querySelector('[data-headlessui-menu-button]');
      const items = element.querySelector('[data-headlessui-menu-items]');
      let isOpen = false;

      if (button && items) {
        // Toggle menu when button is clicked
        button.addEventListener('click', () => {
          isOpen = !isOpen;
          toggleMenu(isOpen);
        });

        // Close menu when clicking outside
        document.addEventListener('click', (event) => {
          if (isOpen && !element.contains(event.target)) {
            isOpen = false;
            toggleMenu(false);
          }
        });

        // Handle menu item clicks
        items.addEventListener('click', (event) => {
          const item = event.target.closest('[data-headlessui-menu-item]');
          if (item) {
            isOpen = false;
            toggleMenu(false);
          }
        });

        // Toggle menu visibility
        function toggleMenu(open) {
          element.dataset.headlessuiState = open ? 'open' : '';
          button.setAttribute('aria-expanded', open.toString());
          items.style.display = open ? 'block' : 'none';
        }
      }
    }
  </script>
</div>